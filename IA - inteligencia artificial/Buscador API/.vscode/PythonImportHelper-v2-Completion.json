[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "build",
        "importPath": "googleapiclient.discovery",
        "description": "googleapiclient.discovery",
        "isExtraImport": true,
        "detail": "googleapiclient.discovery",
        "documentation": {}
    },
    {
        "label": "search",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def search(query, num_results=10):\n    total_results = []\n    num_per_request = 10  # Número de resultados por solicitação\n    for start in range(1, num_results + 1, num_per_request):\n        result = service.cse().list(\n            q=query,\n            cx='63e73428c5279432c',  # ID do mecanismo de pesquisa personalizado\n            num=num_per_request,\n            start=start\n        ).execute()",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def index():\n    if request.method == 'POST':\n        user_input = request.form['user_input']\n        results = search(user_input, num_results=100)  # Alterado para 100 resultados\n        return render_template('index.html', results=results)\n    return render_template('index.html')\nif __name__ == '__main__':\n    app.run(debug=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\n# Chave de API\nAPI_KEY = 'AIzaSyBN4YwzR5NICUhcqZe5Lj_jD8uMEVZyQ78'\n# Criação de um serviço para a API do Google Search\nservice = build('customsearch', 'v1', developerKey=API_KEY)\n# Função para fazer uma busca\ndef search(query, num_results=10):\n    total_results = []\n    num_per_request = 10  # Número de resultados por solicitação\n    for start in range(1, num_results + 1, num_per_request):",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "API_KEY",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "API_KEY = 'AIzaSyBN4YwzR5NICUhcqZe5Lj_jD8uMEVZyQ78'\n# Criação de um serviço para a API do Google Search\nservice = build('customsearch', 'v1', developerKey=API_KEY)\n# Função para fazer uma busca\ndef search(query, num_results=10):\n    total_results = []\n    num_per_request = 10  # Número de resultados por solicitação\n    for start in range(1, num_results + 1, num_per_request):\n        result = service.cse().list(\n            q=query,",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "service",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "service = build('customsearch', 'v1', developerKey=API_KEY)\n# Função para fazer uma busca\ndef search(query, num_results=10):\n    total_results = []\n    num_per_request = 10  # Número de resultados por solicitação\n    for start in range(1, num_results + 1, num_per_request):\n        result = service.cse().list(\n            q=query,\n            cx='63e73428c5279432c',  # ID do mecanismo de pesquisa personalizado\n            num=num_per_request,",
        "detail": "app",
        "documentation": {}
    }
]